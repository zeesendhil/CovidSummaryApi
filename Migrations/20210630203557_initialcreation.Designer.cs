// <auto-generated />
using System;
using CovidSummaryApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CovidSummaryApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210630203557_initialcreation")]
    partial class initialcreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CovidSummaryApi.Model.Cases", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("_1M_pop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("active")
                        .HasColumnType("int");

                    b.Property<int>("critical")
                        .HasColumnType("int");

                    b.Property<string>("new")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("recovered")
                        .HasColumnType("int");

                    b.Property<int>("total")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("CovidSummaryApi.Model.Deaths", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("_1M_pop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("new")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("total")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Deaths");
                });

            modelBuilder.Entity("CovidSummaryApi.Model.Parameters", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("day")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("CovidSummaryApi.Model.Response", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SummaryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("casesID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("continent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("deathsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("population")
                        .HasColumnType("int");

                    b.Property<Guid?>("testsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SummaryID");

                    b.HasIndex("casesID");

                    b.HasIndex("deathsID");

                    b.HasIndex("testsID");

                    b.ToTable("Response");
                });

            modelBuilder.Entity("CovidSummaryApi.Model.Summary", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("get")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("parametersID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("results")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("parametersID");

                    b.ToTable("Summary");
                });

            modelBuilder.Entity("CovidSummaryApi.Model.Tests", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("_1M_pop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("total")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("CovidSummaryApi.Model.errors", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SummaryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("details")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("SummaryID");

                    b.ToTable("errors");
                });

            modelBuilder.Entity("CovidSummaryApi.Model.Response", b =>
                {
                    b.HasOne("CovidSummaryApi.Model.Summary", null)
                        .WithMany("response")
                        .HasForeignKey("SummaryID");

                    b.HasOne("CovidSummaryApi.Model.Cases", "cases")
                        .WithMany()
                        .HasForeignKey("casesID");

                    b.HasOne("CovidSummaryApi.Model.Deaths", "deaths")
                        .WithMany()
                        .HasForeignKey("deathsID");

                    b.HasOne("CovidSummaryApi.Model.Tests", "tests")
                        .WithMany()
                        .HasForeignKey("testsID");

                    b.Navigation("cases");

                    b.Navigation("deaths");

                    b.Navigation("tests");
                });

            modelBuilder.Entity("CovidSummaryApi.Model.Summary", b =>
                {
                    b.HasOne("CovidSummaryApi.Model.Parameters", "parameters")
                        .WithMany()
                        .HasForeignKey("parametersID");

                    b.Navigation("parameters");
                });

            modelBuilder.Entity("CovidSummaryApi.Model.errors", b =>
                {
                    b.HasOne("CovidSummaryApi.Model.Summary", null)
                        .WithMany("errors")
                        .HasForeignKey("SummaryID");
                });

            modelBuilder.Entity("CovidSummaryApi.Model.Summary", b =>
                {
                    b.Navigation("errors");

                    b.Navigation("response");
                });
#pragma warning restore 612, 618
        }
    }
}
